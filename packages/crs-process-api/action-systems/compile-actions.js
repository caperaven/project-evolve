class n{static async perform(a,s,t,r){await this[a.action]?.(a,s,t,r)}static async if_value(a,s,t,r){const i=await crs.process.getValue(a.args.exp,s,t,r),c=await crs.binding.expression.ifFactory(i);return a.args.target!=null&&await crs.process.setValue(a.args.target,c.function,s,t,r),c.function}static async case_value(a,s,t,r){let i=await crs.process.getValue(a.args.exp,s,t,r);const c=await crs.binding.expression.caseFactory(i);return a.args.target!=null&&await crs.process.setValue(a.args.target,c.function,s,t,r),c.function}}crs.intent.compile=n;export{n as CompileActions};

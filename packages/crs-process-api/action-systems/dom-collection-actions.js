class o{static async perform(e,a,t,s){await this[e.action]?.(e,a,t,s)}static async filter_children(e,a,t,s){const r=await crs.process.getValue(e.args.filter,a,t,s);await u(e.args.element,r)}static async toggle_selection(e,a,t,s){const r=await crs.dom.get_element(e.args.target,a,t,s),n=await crs.process.getValue(e.args.multiple||!1,a,t,s),i="aria-selected";if(n!==!0){const l=r.parentElement.querySelector("[aria-selected='true']");if(l===r)return;l?.removeAttribute(i),r.setAttribute(i,"true")}else r.hasAttribute(i)&&r.getAttribute(i)==="true"?r.removeAttribute(i):r.setAttribute(i,"true")}static async get_selected_state(e,a,t,s){const r=await crs.dom.get_element(e.args.target,a,t,s),n={};for(const i of r.children)n[i.dataset.value]=i.getAttribute("aria-selected")=="true";return n}}async function u(c,e){c=await crs.dom.get_element(c);const a=e.length>0;for(let t of c.children){if(t.removeAttribute("aria-hidden"),t.tagName=="HR"&&a){t.setAttribute("aria-hidden","true");continue}t.dataset.tags&&a&&t.dataset.tags.indexOf(e)==-1&&t.setAttribute("aria-hidden","true")}}crs.intent.dom_collection=o;export{o as DomCollectionActions};

class u{static async perform(e,a,t,s){await this[e.action]?.(e,a,t,s)}static async get_animation_layer(e,a,t,s){const n=document.querySelector("#animation-layer");if(n!=null)return n;const l=await crs.call("dom","create_element",{parent:document.body,tag_name:"div",id:"animation-layer",dataset:{layer:"animation"},styles:{position:"fixed",inset:0,zIndex:9999999999,background:"transparent",pointerEvents:"none"}},a,t,s);return e?.args?.target!=null&&await crs.process.setValue(e.args.target,l,a,t,s),l}static async clear_animation_layer(e,a,t,s){const n=document.querySelector("#animation-layer");n!=null&&(n.innerHTML="")}static async remove_animation_layer(e,a,t,s){const n=document.querySelector("#animation-layer");n?.parentElement?.removeChild(n)}static async highlight(e,a,t,s){const n=await this.get_animation_layer(),i=(await crs.dom.get_element(e.args.target,a,t,s)).getBoundingClientRect(),r=await crs.process.getValue(e.args.classes,a,t,s),m=await crs.process.getValue(e.args.duration,a,t,s)||0,g=await crs.process.getValue(e.args.template,a,t,s);let c;const o={position:"fixed",left:`${i.left}px`,top:`${i.top}px`,width:`${i.width}px`,height:`${i.height}px`};if(g!=null?(c=g.content.cloneNode(!0).children[0],await crs.call("dom","set_styles",{element:c,styles:o}),r!=null&&c.classList.add(...r),n.appendChild(c)):c=await crs.call("dom","create_element",{parent:n,tag_name:"div",styles:o,classes:r}),m>0){const d=setTimeout(()=>{clearTimeout(d),c?.parentElement?.removeChild(c)},m)}}static async clone_for_movement(e,a,t,s){const n=await crs.dom.get_element(e.args.element,a,t,s),l=await crs.dom.get_element(e.args.parent,a,t,s),i=await crs.process.getValue(e.args.position||{x:0,y:0},a,t,s),r=n.cloneNode(!0),m=Object.keys(e.args.attributes||{}),g=Object.keys(e.args.styles||{}),c=e.args.classes||[];for(let o of m)r.setAttribute(o,await crs.process.getValue(e.args.attributes[o],a,t,s));for(let o of g)r.style[o]=await crs.process.getValue(e.args.styles[o],a,t,s);for(let o of c)r.classList.add(o);return l!=null&&(l.appendChild(r),r.style.position="absolute",r.style.transform=`translate(${i.x}px, ${i.y}px)`),r}static async enable_resize(e,a,t,s){const n=await crs.dom.get_element(e.args.element,a,t,s),l=await crs.process.getValue(e.args.resize_query,a,t,s),i=await crs.process.getValue(e.args.options,a,t,s),m=await import(import.meta.url.replace("dom-interactive-actions.js","managers/resize-element-manager.js"));new m.ResizeElementManager(n,l,i)}static async disable_resize(e,a,t,s){(await crs.dom.get_element(e.args.element,a,t,s)).__resizeManager?.dispose()}static async enable_dragdrop(e,a,t,s){const n=await crs.process.getValue(e.args.options,a,t,s),l=await crs.dom.get_element(e.args.element,a,t,s),r=await import(import.meta.url.replace("dom-interactive-actions.js","managers/dragdrop-manager.js"));new r.DragDropManager(l,n)}static async disable_dragdrop(e,a,t,s){const n=await crs.dom.get_element(e.args.element,a,t,s);n.__dragDropManager?.dispose(),delete n.__dragDropManager}static async enable_move(e,a,t,s){const n=await crs.process.getValue(e.args.move_query,a,t,s),l=await crs.dom.get_element(e.args.element,a,t,s),i=await crs.process.getValue(e.args.callback,a,t,s),m=await import(import.meta.url.replace("dom-interactive-actions.js","managers/move-manager.js"));new m.MoveManager(l,n,i)}static async disable_move(e,a,t,s){const n=await crs.dom.get_element(e.args.element,a,t,s);n.__moveManager?.dispose(),delete n.__moveManager}}crs.intent.dom_interactive=u;export{u as DomInteractiveActions};

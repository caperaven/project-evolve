async function l(a,t){const n=await crs.call("dom_interactive","get_animation_layer"),e=await r[t.drag.clone](a,t);return e.style.translate=`${a._bounds.x}px ${a._bounds.y}px`,e.style.filter="drop-shadow(0 0 5px #00000080)",n.appendChild(e),e}class r{static async element(t){return t}static async template(t,n){let e=n.drag.template;e==null&&(e=document.querySelector(`#${t.dataset.template}`));const s=e.content.cloneNode(!0).children[0];return s._bounds=t._bounds,s.dragElement=t,s}}async function o(a){if(this.updateDragHandler==null)return;const t=this.dragElement._bounds.x+(this.movePoint.x-this.startPoint.x),n=this.dragElement._bounds.y+(this.movePoint.y-this.startPoint.y);this.dragElement.style.translate=`${t}px ${n}px`,requestAnimationFrame(this.updateDragHandler)}export{l as startDrag,o as updateDrag};

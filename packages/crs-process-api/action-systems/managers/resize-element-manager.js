import{getDraggable as o}from"./dragdrop-manager/drag-utils.js";import{getMouseInputMap as d,clientX as n,clientY as l}from"./input-mapping.js";class m extends crs.classes.Observable{#h;#a;#r;#t;#l;#o;#d;#i;#e;#n;#s;constructor(t,i,e){super(),this.#h=t,this.#a=t.getBoundingClientRect(),this.#r=i,this.#t=e,this.#l=this.#u.bind(this),this.#o=this.#m.bind(this),this.#d=this.#g.bind(this),this.#s=d(),this.#h.addEventListener(this.#s.mousedown,this.#l,{passive:!1}),t.__resizeManager=this,this.#t.callback!=null&&this.addEventListener("resized",this.#t.callback)}dispose(){this.removeEventListener("resized",this.#t.callback),this.#h.removeEventListener(this.#s.mousedown,this.#l),this.#l=null,this.#o=null,this.#d=null,this.#i=null,this.#e=null,this.#n=null,this.#r=null,this.#t=null,this.#a=null,this.#s=null,delete this.#h.__resizeManager,this.#h=null,super.dispose()}#u(t){const i=o(t,{drag:{query:this.#r}});i!=null&&(t.preventDefault(),this.#i=i.parentElement||t.composedPath()[2],this.#t.zIndex!=null&&(this.#i.style.zIndex=this.#t.zIndex),this.#t.dropShadow==!0&&(this.#i.style.filter="var(--drop-shadow)"),this.#e=this.#i.getBoundingClientRect(),this.#n={x:n(t),y:l(t)},this.#t.min=this.#t.min||{},this.#t.min.width=this.#t.min.width||this.#e.width,this.#t.min.height=this.#t.min.height||this.#e.height,this.#t.max=this.#t.max||{},this.#t.max.width=this.#t.max.width||Number.MAX_VALUE,this.#t.max.height=this.#t.max.height||Number.MAX_VALUE,document.addEventListener(this.#s.mousemove,this.#o,{passive:!1}),document.addEventListener(this.#s.mouseup,this.#d,{passive:!1}))}#m(t){let i=n(t)-this.#n.x,e=l(t)-this.#n.y;this.#t.lock_axis=="x"&&(e=0),this.#t.lock_axis=="y"&&(i=0);let s=this.#e.width+i-4,h=this.#e.height+e-4;s=s<this.#t.min.width?this.#t.min.width:s>this.#t.max.width?this.#t.max.width:s,h=h<this.#t.min.height?this.#t.min.height:h>this.#t.max.height?this.#t.max.height:h,this.#i.style.width=`${s}px`,this.#i.style.height=`${h}px`}#g(t){this.#t.zIndex!=null&&(this.#i.style.zIndex=""),this.#t.dropShadow==!0&&(this.#i.style.filter="");const i=this.#i,e=i.style.width,s=i.style.height;document.removeEventListener(this.#s.mousemove,this.#o),document.removeEventListener(this.#s.mouseup,this.#d),this.#i=null,this.#e=null,this.#n=null,this.notify("resized",{element:i,width:e,height:s})}}export{m as ResizeElementManager};
